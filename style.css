/* 全体のレイアウト */
#container {
  display: flex;
  flex-direction: row;
  height: 75vh;
  border-bottom: 1px solid #ccc;
}

/* 課題一覧 */
#taskList {
  width: 20%;
  min-width: 180px;
  border-right: 1px solid #ddd;
  padding: 1rem;
  box-sizing: border-box;
  overflow-y: auto;
  background: #f9f9f9;
}
#taskList h2 {
  margin-top: 0;
  font-size: 1.1rem;
}
#taskList ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
#taskList li {
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  align-items: center;
  transition: background 0.2s;
}
#taskList li:hover {
  background: #e6f7ff;
}
#taskList li.active {
  background: #bae7ff;
}
.task-icon {
  width: 1rem;
  height: 1rem;
  margin-right: 0.5rem;
  border-radius: 50%;
  display: inline-block;
}

/* 問題文エリア */
#problemArea {
  width: 30%;
  padding: 1rem;
  box-sizing: border-box;
  overflow-y: auto;
}
#problemArea h2 {
  margin-top: 0;
  font-size: 1.2rem;
}
#hintButton {
  margin-top: 1rem;
  padding: 0.4rem 0.8rem;
  border: none;
  background: #fffae6;
  border-radius: 4px;
  cursor: pointer;
}
#hintButton:hover {
  background: #fff2cc;
}
#hint {
  margin-top: 0.5rem;
  padding: 0.5rem;
  background: #f0f5ff;
  border-radius: 4px;
  font-size: 0.95rem;
  color: #003a8c;
}

/* コード＋実行エリア */
#codeAndOutput {
  width: 50%;
  display: flex;
  flex-direction: column;
  padding: 1rem;
  box-sizing: border-box;
}
/* エディタ部分 */
#editorWrapper {
  position: relative;
  flex: 1;
  min-height: 200px;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow: hidden;
}

/* コードエリア左側の再生・停止ボタン */
#editorControls {
  position: absolute;
  top: 0;
  left: 0;
  width: 32px;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 8px;
  box-sizing: border-box;
  background: #fafafa;
  border-right: 1px solid #ddd;
}

#editorControls button {
  width: 24px;
  height: 24px;
  margin-bottom: 8px;
  border: none;
  border-radius: 4px;
  background: #1890ff;
  color: #fff;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  padding: 0;
}
#editorControls button:hover {
  background: #40a9ff;
}
/* ghost text overlay */
#ghostText {
  position: absolute;
  top: 0;
  left: 32px; /* コントロールと行番号分のオフセット */
  right: 0;
  bottom: 0;
  margin: 0;
  padding: 5px;
  pointer-events: none;
  white-space: pre;
  color: #999;
  font-family: monospace;
  font-size: 14px;
  opacity: 0.55;          /* 濃さを上げて視認性UP */
  overflow: hidden;       /* ← これで要素がスクロールコンテナになり、scrollTop/Left 同期が効く */
}
/* CodeMirror instance styling */
.CodeMirror {
  height: 100%;
  font-size: 14px;
  /* 左のコントロール分余白を設ける */
  margin-left: 32px;
}

/* 生徒情報表示エリア */
#studentInfo {
  background-color: #f5f5f5;
  padding: 8px 12px;
  font-weight: bold;
  border-bottom: 1px solid #ddd;
  font-size: 1rem;
}

/* 実行結果部分 */
#outputWrapper {
  margin-top: 1rem;
  flex: 0 0 200px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: #fafafa;
  padding: 0.5rem;
  overflow-y: auto;
}
#outputWrapper h2 {
  margin: 0 0 0.5rem 0;
  font-size: 1.1rem;
}

/* プログラム見出しのスタイルを他の見出しと揃える */
#programHeader h2 {
  margin: 0 0 0.5rem 0;
  font-size: 1.1rem;
}
/* 出力エリア。テキストと入力欄を含むので div として定義 */
#outputArea {
  white-space: pre-wrap;
  font-family: monospace;
  color: #333;
}

#outputArea input.py-input {
  font-family: monospace;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 2px 4px;
  margin-left: 4px;
  width: auto;
  display: inline-block;
  box-sizing: border-box;
}

/* コマンドエリア */
#controls {
  padding: 0.5rem;
  display: flex;
  gap: 0.5rem;
  align-items: center;
}
#controls button {
  padding: 0.4rem 0.8rem;
  border: none;
  background: #1890ff;
  color: white;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background 0.2s;
}
#controls #runButton,
#controls #stopButton {
  display: none;
}
#controls button:hover {
  background: #40a9ff;
}

/* ログアウトボタンのスタイル */
#controls #logoutButton {
  margin-left: 0.5rem;
  padding: 0.4rem 0.8rem;
  border: none;
  background: #f5222d;
  color: white;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background 0.2s;
}
#controls #logoutButton:hover {
  background: #ff4d4f;
}

/* ボタンが無効状態のときのスタイル */
#controls button:disabled {
  background: #d9d9d9;
  color: #ffffff;
  cursor: not-allowed;
}

/* 保存・提出などのステータスメッセージ */
/* ステータスメッセージはコマンドエリア内に表示 */
#statusMessage {
  margin-left: 0.5rem;
  font-size: 0.9rem;
}
#statusMessage.success {
  color: #52c41a; /* green */
}
#statusMessage.error {
  color: #ff4d4f; /* red */
}
#controls label {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  font-size: 0.9rem;
}
/* ===== Coding Assist: 目立たせる（濃くする）＋視認性強化 ===== */
/* 対象要素に .coding-assist-boost を付与して適用（JS側で自動付与） */
.coding-assist-boost{
  /* 背景をやや濃く（ライト/ダーク双方で視認性UP） */
  background: rgba(0,0,0,0.72);
  color: #fff;
  border: 1px solid rgba(255,255,255,0.25);
  /* 角丸・内外シャドウで浮かせる */
  border-radius: 10px;
  box-shadow:
    0 1px 2px rgba(0,0,0,0.25),
    0 8px 24px rgba(0,0,0,0.18);
  /* 文字のにじみを抑える */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* 余白を少しだけ増やす（読みやすさ優先・既存サイズは維持） */
  padding: 10px 12px;
}

/* 追従用の土台（JS側で position/transform を制御） */
.coding-assist-follow {
  position: absolute;          /* editorのスクロール領域内で絶対配置 */
  z-index: 25;                 /* コードより手前に出す（必要に応じ調整） */
  /* もともと右上固定の想定。transformでスクロールを相殺するのでtop/rightは可読性のため */
  top: 8px;
  right: 8px;
  pointer-events: auto;        /* ボタン等が押せるように */
}

/* アニメのカクつきを抑える（変換をGPUコンポジットに） */
.coding-assist-follow,
.coding-assist-follow * {
  will-change: transform;
}
/* 出力エリア内のインライン入力 */
.inline-input {
  display: inline-flex;
  align-items: center;
  gap: 6px;
}
.inline-input > input[type="text"] {
  font: inherit;
  padding: 2px 6px;
  border: 1px solid #bbb;
  border-radius: 6px;
  outline: none;
}
.inline-input > button {
  font: inherit;
  padding: 2px 8px;
  border: 1px solid #888;
  border-radius: 6px;
  background: #f0f0f0;
  cursor: pointer;
}
.inline-input > input[type="text"]:focus {
  border-color: #1677ff;
  box-shadow: 0 0 0 2px rgba(22,119,255,.15);
}